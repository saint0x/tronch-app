{
  "prompt": "Generate a Solidity smart contract for an escrow service. Consider the following requirements and backstory:\\n\\nBackstory:\\nAn expert web3 smart contract creator is tasked with generating a Solidity smart contract for an escrow service based on the following requirements:\\n\\nRequirements:\\n1. The contract should include a constructor to initialize the client, client's email, and set the expiration date to 30 days from contract deployment.\\n2. Implement modifiers to restrict function access to only the client and the seller.\\n3. Include functions to initiate the escrow, confirm receipt, dispute the escrow, resolve disputes, and retrieve transaction details.\\n4. The escrow should be initiated with a payment of 1.50 ETH.\\n5. Include event logging, timestamps for actions, and detailed dispute resolution mechanisms.\\n6. Ensure the contract is secure, efficient, and adheres to best practices in Solidity development.\\n\\nUser Input:\\n- Requirements Checklist: {{requirements}}\\n- Escrow Details: {{description}}\\n\\nPlease generate a Solidity smart contract that fulfills these requirements with exceptional code quality."
}
